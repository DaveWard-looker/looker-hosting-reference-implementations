# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: 'Provision Image'
  hosts: default
  become: true

  tasks:
    - name: Load package name variables
      include_vars: "{{ lookup('first_found', params) }}"
      vars:
        params:
          files:
            - '{{ansible_distribution}}.yaml'
            - '{{ansible_os_family}}.yaml'
            - 'default.yaml'
          paths:
            - 'vars'

    - name: Load looker license key secret
      command: gcloud secrets versions access latest --secret {{ LICENSE_KEY_SECRET }}
      register: looker_license_key

    - name: Load jmx pass secret
      command: gcloud secrets versions access latest --secret {{ JMX_PASS_SECRET }}
      register: jmx_pass

    - name: download google logging
      get_url:
        url: https://dl.google.com/cloudagents/add-logging-agent-repo.sh
        timeout: 600
        dest: /tmp/add-logging-agent-repo.sh
    - name: download google monitoring
      get_url:
        url: https://dl.google.com/cloudagents/add-monitoring-agent-repo.sh
        timeout: 600
        dest: /tmp/add-monitoring-agent-repo.sh
    - name: install google logging
      shell:
        cmd: bash /tmp/add-logging-agent-repo.sh
    - name: install google monitoring
      shell:
        cmd: bash /tmp/add-monitoring-agent-repo.sh

    - name: install packages
      package:
        name:
          - '{{ java_package_name }}'
          - '{{ libssl_package_name }}'
          - '{{ nfs_package_name }}'
          - cifs-utils
          - jq
          - google-fluentd
          - google-fluentd-catch-all-config-structured
          - stackdriver-agent
        state: latest
        update_cache: yes
    - name: install chromium rhel
      yum:
        name:
          - 'https://dl.google.com/linux/chrome/rpm/stable/x86_64/google-chrome-stable-{{ chromium_version }}-1.x86_64.rpm'
        state: present
      when: ansible_os_family == 'RedHat'
    - name: install packages debian specific
      apt:
        name:
          - '{{ fonts_package_name }}'
        state: latest
      when: ansible_os_family == 'Debian'
    - name: install chromium debian
      apt:
        deb: 'https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_{{ chromium_version }}-1_amd64.deb'
        state: present
      when: ansible_os_family == 'Debian'

    - name: download cloudsql proxy
      get_url:
        url: https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64
        timeout: 300
        dest: /usr/local/bin/cloud_sql_proxy
        mode: 755

    - name: download looker service
      get_url:
        url: https://raw.githubusercontent.com/looker/customer-scripts/master/startup_scripts/systemd/looker.service
        timeout: 600
        dest: /etc/systemd/system/looker.service
        mode: '0644'

    - name: update sysctl.conf
      blockinfile:
        path: /etc/sysctl.conf
        block: |
          net.ipv4.tcp_keepalive_time=200
          net.ipv4.tcp_keepalive_intvl=200
          net.ipv4.tcp_keepalive_probes=5
    - name: update limits.conf
      blockinfile:
        path: /etc/security/limits.conf
        block: |
          looker     soft     nofile     4096
          looker     hard     nofile     4096

    - name: nfs statd set debian
      lineinfile:
        path: /etc/default/nfs-common
        regexp: '^STATDOPTS='
        line: 'STATDOPTS="-p 2046"'
      when: ansible_os_family == 'Debian'
    - name: nfs statd set rhel
      lineinfile:
        path: /etc/sysconfig/nfs
        regexp: '^STATD_PORT='
        line: 'STATD_PORT=2046'
      when: ansible_os_family == 'RedHat'
    - name: nfs nlockmgr set
      blockinfile:
        path: /etc/modprobe.d/lock.conf
        create: yes
        block: |
          options lockd nlm_tcpport=4045
          options lockd nlm_udpport=4045

    - name: Create Looker group
      group:
        name: looker
        gid: 9999
        state: present
    - name: make looker user
      user:
        name: looker
        group: looker
        uid: 9999
        shell: /bin/bash

    - name: make looker directory
      file:
        path: /home/looker/looker
        state: directory
        owner: looker
        group: looker

    - name: add chromium symlink
      file:
        src: '/usr/bin/{{ chromium_service_name }}'
        dest: /usr/bin/chromium
        owner: looker
        group: looker
        state: link
      when: chromium_service_name != 'chromium'

    - name: download looker URIs
      uri:
        url: https://apidownload.looker.com/download
        method: POST
        body: "{\"lic\": \"{{ looker_license_key.stdout }}\", \"email\": \"{{ TECHNICAL_CONTACT }}\", \"latest\":\"specific\", \"specific\":\"looker-{{ LOOKER_VERSION }}-latest.jar\"}"
        body_format: json
        headers:
          Content-Type: application/json
      register: looker
    - name: download looker jar
      get_url:
        url: "{{ looker.json.url }}"
        dest: /home/looker/looker/looker.jar
        timeout: 600
        owner: looker
        group: looker
    - name: download looker deps jar
      get_url:
        url: "{{ looker.json.depUrl }}"
        dest: /home/looker/looker/looker-dependencies.jar
        timeout: 600
        owner: looker
        group: looker

    - name: make jmx directory
      file:
        path: /home/looker/.lookerjmx
        state: directory
        owner: looker
        group: looker
    - name: update create jmxremote.access
      blockinfile:
        path: /home/looker/.lookerjmx/jmxremote.access
        create: yes
        group: looker
        owner: looker
        mode: '0400'
        block: |
          monitorRole    readonly
          controlRole    readwrite \
                         create javax.management.monitor.*,javax.management.timer.* \
                         unregister
    - name: create jmxremote.password
      blockinfile:
        path: /home/looker/.lookerjmx/jmxremote.password
        create: yes
        group: looker
        owner: looker
        mode: '0400'
        block: |
          monitorRole    {{ jmx_pass.stdout }}
          controlRole    {{ jmx_pass.stdout }}

    - name: make deploy keys directory
      file:
        path: /home/looker/looker/deploy_keys
        state: directory
        owner: looker
        group: looker

    - name: Copy startup config
      copy:
        src: files/looker11
        dest: /home/looker/looker/looker
        owner: looker
        group: looker
        mode: '0750'

    - name: copy jmx config
      copy:
        src: files/jvm-sun-hotspot.conf
        dest: /opt/stackdriver/collectd/etc/collectd.d/jvm-sun-hotspot.conf
        mode: '666'
        owner: root
        group: root
    - name: update jmx file
      replace:
        path: /opt/stackdriver/collectd/etc/collectd.d/jvm-sun-hotspot.conf
        regexp: JMX_PASS
        replace: "{{ jmx_pass.stdout }}"

    - name: zip old logs cron
      cron:
        name: "zip looker logs"
        user: looker
        minute: "9"
        hour: "1"
        job: "find $HOME/looker/log -name 'looker.log.????????' -mtime +7 -exec gzip '{}' \\; > /dev/null"
    - name: delete old log archives cron
      cron:
        name: "delete archived logs"
        user: looker
        minute: "33"
        hour: "1"
        job: "find $HOME/looker/log -name 'looker.log.????????.gz' -mtime +28 -exec rm -f '{}' \\; > /dev/null"
